<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   namespace="PokerTell.PokerHand.Analyzation"
                   assembly="PokerTell.PokerHand"
                   >

  <class name="ConvertedPokerHand" 
         proxy="PokerTell.Infrastructure.Interfaces.PokerHand.IConvertedPokerHand, PokerTell.Infrastructure"
         table="ConvertedPokerHands"
         lazy="true"
         mutable="false">
  
    <cache usage="read-only" />
    
    <id name="Id" unsaved-value="0">
      <generator class="native" />
    </id>
     
    <property name="Site" length="20" not-null="true" index="ConvertedPokerHand_Site">
      <column name="Site" sql-type="varchar(20)" />
    </property>
    <property name="TournamentId" index="ConvertedPokerHand_TournamentId"/>
    <property name="GameId" index="ConvertedPokerHand_GameId" >
      <column name="GameId" sql-type="bigint(20)" not-null="true" /> <!-- Need to be explicit(sql-type) for SQLite -->
    </property>
    <property name="TableName" length="20" >
      <column name="TableName" sql-type="varchar(20)" />
    </property>

    <property name="BB" column="BigBlind" index="ConvertedPokerHand_BB" />
    <property name="SB" column="SmallBlind" />
    
    <property name="Ante"  type="double" scale="2" precision="2"/>
    <property name="TimeStamp" />

    <property name="Board">
      <column name="Board" sql-type="varchar(20)" />
    </property>
      
    <property name="TotalPlayers" index="ConvertedPokerHand_TotalPlayers">
      <column name="TotalPlayers" sql-type="tinyint(2)" />
    </property>
   
    <property name="TotalSeats" >
      <column name="TotalSeats" sql-type="tinyint(2)" />
    </property>

    <property name="PlayersInFlop">
      <column name="PlayersInFlop" sql-type="tinyint(2)"/>
    </property>
    
    <property name="PlayersInTurn" >
      <column name="PlayersInTurn" sql-type="tinyint(2)" />
    </property>
    
    <property name="PlayersInRiver" >
      <column name="PlayersInRiver" sql-type="tinyint(2)" />
    </property>

    <property name="SequencePreFlop" length="500"/>
    <property name="SequenceFlop" length="500"/>
    <property name="SequenceTurn" length="500"/>
    <property name="SequenceRiver" length="500"/>

    <bag name="Players" cascade="all" lazy="true" mutable="true">
      <cache usage="nonstrict-read-write" />
      <key column="HandId"  not-null="true" foreign-key="FK_HandId"/>
      <one-to-many class="ConvertedPokerPlayer" />
    </bag>
    
  </class>

  <query name="FindConvertedPokerHandByGameIdAndSite" cacheable="true">
    <![CDATA[
        from ConvertedPokerHand hand 
        where hand.GameId =:gameId and hand.Site =:site
    ]]>
    <query-param name="gameId" type="ulong"/>
    <query-param name="site" type="string"/>
  </query>
</hibernate-mapping>

<!-- 
 <list name="Players" cascade="all" lazy="true">
      <cache usage="read-only" />
      <key column="HandId"  not-null="true"/>
      <index column="ListPosition" />
      <one-to-many class="ConvertedPokerPlayer" />
    </list>
-->
