//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4005
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PokerTell.DatabaseSetup.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PokerTell.DatabaseSetup.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS actionhhd;
        ///
        ///CREATE TABLE actionhhd (
        ///  playerid int(11) unsigned NOT NULL,
        ///  handid bigint(20) unsigned NOT NULL,
        ///  m int(10) unsigned DEFAULT NULL,
        ///  cards varchar(6) DEFAULT NULL,
        ///  position tinyint(2) DEFAULT NULL COMMENT &apos;Order of players acting on the hand (0-SB to TotalPlayers-1)&apos;,
        ///  strategicposition tinyint(2) DEFAULT NULL COMMENT &apos;Stratecic Position of player SB to BU&apos;,
        ///  inposflop tinyint(1) unsigned NOT NULL DEFAULT &apos;2&apos; COMMENT &apos;1=IP, 0=OOP 2=N/A(no action on Round)&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MySql_Queries_CreateTables {
            get {
                return ResourceManager.GetString("MySql_Queries_CreateTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE DATABASE IF NOT EXISTS {0};.
        /// </summary>
        internal static string Sql_Queries_CreateDatabase {
            get {
                return ResourceManager.GetString("Sql_Queries_CreateDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP DATABASE IF EXISTS {0};.
        /// </summary>
        internal static string Sql_Queries_DropDatabase {
            get {
                return ResourceManager.GetString("Sql_Queries_DropDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHOW DATABASES;.
        /// </summary>
        internal static string Sql_Queries_ShowDatabases {
            get {
                return ResourceManager.GetString("Sql_Queries_ShowDatabases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS actionhhd; 
        ///
        ///CREATE TABLE actionhhd(
        ///       playerid int(11) NOT NULL,
        ///       handid bigint(20) NOT NULL,
        ///       m int(10) DEFAULT NULL,
        ///       cards varchar(6) DEFAULT NULL,
        ///       position tinyint(2) DEFAULT NULL,
        ///       strategicposition tinyint(2) DEFAULT NULL,
        ///       inposflop tinyint(1) NOT NULL  default &apos;2&apos;,
        ///       inposturn tinyint(1) NOT NULL default &apos;2&apos;,
        ///       inposriver tinyint(1) NOT NULL default &apos;2&apos;,
        ///       raiseinfrontpreflopfrompos tinyint(2) NOT NULL default [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SQLite_Queries_CreateTables {
            get {
                return ResourceManager.GetString("SQLite_Queries_CreateTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database you are trying to create already exists.
        ///Therefore it could not be created.
        ///If you were trying to delete all its data, use Clear Database instead..
        /// </summary>
        internal static string Warning_DatabaseExistsException {
            get {
                return ResourceManager.GetString("Warning_DatabaseExistsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PokerTell was unable to connect to the Database specified in the settings. 
        ///Please make sure the MySql Server is running and check the Database Settings using the Database Menu.
        ///Check that the hostname, username, password were entered correctly and that you chose an existing database or created one..
        /// </summary>
        internal static string Warning_UnableToConnectToDatabase {
            get {
                return ResourceManager.GetString("Warning_UnableToConnectToDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PokerTell was unable to connect to the host specified in the settings. 
        ///Please make sure the database server is running and check the Database Settings.
        ///Check that the hostname, username and possibly password were entered correctly..
        /// </summary>
        internal static string Warning_UnableToConnectToHost {
            get {
                return ResourceManager.GetString("Warning_UnableToConnectToHost", resourceCulture);
            }
        }
    }
}
