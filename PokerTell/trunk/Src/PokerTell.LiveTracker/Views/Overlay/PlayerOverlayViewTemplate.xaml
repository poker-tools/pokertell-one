<ResourceDictionary 
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       xmlns:ViewModels="clr-namespace:PokerTell.LiveTracker.ViewModels.Overlay;assembly=PokerTell.LiveTracker"
       xmlns:WPF="clr-namespace:Tools.WPF;assembly=Tools"
       xmlns:ctrl="clr-namespace:Tools.WPF.Controls;assembly=Tools">
       
   <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,/PokerTell.Infrastructure;component/Views/Converters.xaml" />
   </ResourceDictionary.MergedDictionaries>
   <!-- TotalHands Style -->
        <Style x:Key="InactiveLabelStyle" TargetType="Label">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0,0,2,0" />
            <Setter Property="Foreground" 
                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, 
                            Path=DataContext.Settings.InPositionForeground}" />
            <Setter Property="FontStyle" Value="Italic" />
        </Style>
        <!-- StatisticsSetLabelStyle -->
        <Style x:Key ="StatisticsSetLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0, 0, 1, 0" />
            <Setter Property="Background" Value="#04000000"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0.5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OutOfPositionStatisticsSetLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource StatisticsSetLabelStyle}" >
            <Setter Property="Foreground"
                     Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, 
                            Path=DataContext.Settings.OutOfPositionForeground}" />
        </Style>
         <Style x:Key="InPositionStatisticsSetLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource StatisticsSetLabelStyle}" >
            <Setter Property="Foreground" 
                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, 
                            Path=DataContext.Settings.InPositionForeground}" />
        </Style>
      <!-- PreFlopStatisticsSetsViewModel -->
      <DataTemplate x:Key="PreFlopStatisticsSetsViewTemplate">
            <StackPanel Orientation="Horizontal">
                     <!-- Total Hands -->
                    <Label Style="{StaticResource InactiveLabelStyle}" Content="{Binding TotalCounts}"/>
                     <!-- Call/Raise unraised Pot -->
                     <Label Style="{StaticResource OutOfPositionStatisticsSetLabelStyle}"
                            DataContext="{Binding PreFlopUnraisedPotStatisticsSet}">
                          <TextBlock>
                             <TextBlock.Text>
                                 <MultiBinding StringFormat=" {0}-{1}">
                                     <Binding Path="Rows[1].Percentage"/>
                                     <Binding Path="Rows[2].Percentage"/>
                                 </MultiBinding>
                              </TextBlock.Text>
                          </TextBlock>
                     </Label>
                      <!-- Call/Raise raised Pot -->
                     <Label Style="{StaticResource InPositionStatisticsSetLabelStyle}"
                            DataContext="{Binding PreFlopRaisedPotStatisticsSet}">
                          <TextBlock>
                             <TextBlock.Text>
                                 <MultiBinding StringFormat=" {0}-{1}">
                                     <Binding Path="Rows[1].Percentage"/>
                                     <Binding Path="Rows[2].Percentage"/>
                                 </MultiBinding>
                              </TextBlock.Text>
                          </TextBlock>                    
                     </Label>
                     <!-- Steals from Button unraised Pot -->
                     <Label Style="{StaticResource InactiveLabelStyle}" Content="{Binding Steals}"/>
            </StackPanel>
        </DataTemplate>
        <!-- PostFlopStatisticsSetsViewModel --> 
        <DataTemplate x:Key="PostFlopStatisticsSetsViewTemplate">
         <StackPanel Orientation="Horizontal">
              <!-- Out of Position -->
              <!-- HeroXOrHeroBOutOfPositionStatisticsSet -->
              <Label Style="{StaticResource OutOfPositionStatisticsSetLabelStyle}" 
                     DataContext="{Binding HeroXOrHeroBOutOfPositionStatisticsSet}" 
                     Content="{Binding Rows[1].Percentage}"/>
              <!-- OppBIntoHeroOutOfPositionStatisticsSet -->
              <Label Style="{StaticResource OutOfPositionStatisticsSetLabelStyle}"
                     DataContext="{Binding OppBIntoHeroOutOfPositionStatisticsSet}">
                 <TextBlock>
                   <TextBlock.Text>
                       <MultiBinding StringFormat=" {0}-{1}">
                           <Binding Path="Rows[1].Percentage"/>
                           <Binding Path="Rows[2].Percentage"/>
                       </MultiBinding>
                    </TextBlock.Text>
                 </TextBlock>
              </Label>
              <!-- HeroXOutOfPositionOppBStatisticsSet -->
              <Label Style="{StaticResource OutOfPositionStatisticsSetLabelStyle}"
                     DataContext="{Binding HeroXOutOfPositionOppBStatisticsSet}">
                  <TextBlock>
                       <TextBlock.Text>
                           <MultiBinding StringFormat=" {0}x{1}">
                               <Binding Path="Rows[1].Percentage"/>
                               <Binding Path="Rows[2].Percentage"/>
                           </MultiBinding>
                        </TextBlock.Text>
                     </TextBlock>
              </Label>
              
              <!-- In Position -->
              <!-- HeroXOrHeroBInPositionStatisticsSet -->
              <Label Style="{StaticResource InPositionStatisticsSetLabelStyle}"
                     DataContext="{Binding HeroXOrHeroBInPositionStatisticsSet}"
                     Content="{Binding Rows[1].Percentage}"/>
              <!-- OppBIntoHeroInPositionStatisticsSet -->
              <Label Style="{StaticResource InPositionStatisticsSetLabelStyle}"
                     DataContext="{Binding OppBIntoHeroInPositionStatisticsSet}">
                   <TextBlock>
                       <TextBlock.Text>
                           <MultiBinding StringFormat=" {0}-{1}">
                               <Binding Path="Rows[1].Percentage"/>
                               <Binding Path="Rows[2].Percentage"/>
                           </MultiBinding>
                        </TextBlock.Text>
                     </TextBlock>
              </Label>
          </StackPanel>
        </DataTemplate>
        
        <!-- PlayerOverlayViewModel -->
        <DataTemplate DataType="{x:Type ViewModels:PlayerOverlayViewModel}">
          <ctrl:DragCanvas AllowDragging="True"  AllowDragOutOfView="True"> 
              <!-- PlayerStatistics -->
              <Border HorizontalAlignment="Center" VerticalAlignment="Center"
                       CornerRadius="10"
                       Padding="5, 2, 5, 2"
                       Visibility="{Binding PlayerStatus.IsPresent, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}"
                       Background="{Binding Settings.Background}" 
                       Opacity="{Binding Settings.Opacity}"
                       Canvas.Top="{Binding Top}"
                       Canvas.Left="{Binding Left}">
                    <Viewbox Width="{Binding Settings.Width}" Height="{Binding Settings.Height}" Stretch="Fill">
                       <StackPanel Orientation="Vertical" >
                          <!-- Preflop -->
                           <!-- Bind Visibility to Main Settings Show PreFlop -->
                          <ContentControl Content="{Binding PlayerStatistics.PreFlopStatisticsSets}" 
                                          ContentTemplate="{StaticResource PreFlopStatisticsSetsViewTemplate}"
                                          Visibility="{Binding Settings.ShowPreFlop, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}"/>
                          <!-- Flop -->
                          <!-- Bind Visibility to Main Settings Show Flop -->
                         <ContentControl Content="{Binding PlayerStatistics.FlopStatisticsSets}"
                                         ContentTemplate="{StaticResource PostFlopStatisticsSetsViewTemplate}"
                                         Visibility="{Binding Settings.ShowFlop, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}"/>
                          <!-- Turn -->
                          <!-- Bind Visibility to Main Settings Show Turn -->
                         <ContentControl Content="{Binding PlayerStatistics.TurnStatisticsSets}"
                                         ContentTemplate="{StaticResource PostFlopStatisticsSetsViewTemplate}"
                                         Visibility="{Binding Settings.ShowTurn, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}"/>
                          <!-- River -->
                          <!-- Bind Visibility to Main Settings Show River -->
                         <ContentControl Content="{Binding PlayerStatistics.RiverStatisticsSets}"
                                         ContentTemplate="{StaticResource PostFlopStatisticsSetsViewTemplate}"
                                         Visibility="{Binding Settings.ShowRiver, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}"/>
                       </StackPanel>
                    </Viewbox>   
                  </Border>
                  <!-- HarringtonM -->
                  <Border   Margin="3"
                            Padding="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Canvas.Left="{Binding PlayerStatus.HarringtonM.Left}"
                            Canvas.Top="{Binding PlayerStatus.HarringtonM.Top}"
                            Background="{Binding Settings.Background}"
                            BorderThickness="3"
                            CornerRadius="20">
                              <Border.Style>
                                    <Style TargetType="{x:Type Border}"> 
                                    <Setter Property="BorderBrush" Value="{Binding PlayerStatus.HarringtonM.Zone}" /> 
                                      <!--  <Style.Triggers>
                                            <Trigger  Property="BorderBrush" Value="Orange">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard> 
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                                            From="Yellow"
                                                                            To="Red"
                                                                            Duration="0:0:0.3"
                                                                            AutoReverse="True"
                                                                            RepeatBehavior="0:0:8"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                           </Trigger>
                                         </Style.Triggers> -->
                                      </Style>
                              </Border.Style>
                              <TextBlock MinWidth="13.5"
                                         Foreground="{Binding Settings.OutOfPositionForeground}"
                                         Text="{Binding PlayerStatus.HarringtonM.Value}"
                                         TextAlignment="Center"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"/>
                    </Border>
            </ctrl:DragCanvas>
    </DataTemplate>
</ResourceDictionary>